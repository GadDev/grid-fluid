{"version":3,"sources":["components/Spinner/index.js","App.js","index.js"],"names":["Spinner","className","Story","story","useState","isExpand","setIsExpand","by","score","id","gridColumnStart","gridRowStart","url","title","styleExpand","gridColumnEnd","gridRowEnd","classStory","classnames","onClick","key","style","href","target","rel","HackerStoryTiles","stories","length","map","defaultProps","App","setStories","useEffect","a","fetch","response","ok","Error","text","json","promises","then","Promise","all","result","counter","reducer","reduce","acc","push","console","error","getTopStories","ReactDOM","render","document","getElementById"],"mappings":"0TAceA,G,YAVC,kBACZ,yBAAKC,UAAU,WACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,oCCH3B,SAASC,EAAT,GAA2B,IAAD,EAATC,EAAS,EAATA,MAAS,EACUC,oBAAS,GADnB,mBACfC,EADe,KACLC,EADK,KAEdC,EAA6DJ,EAA7DI,GAAIC,EAAyDL,EAAzDK,MAAOC,EAAkDN,EAAlDM,GAAIC,EAA8CP,EAA9CO,gBAAiBC,EAA6BR,EAA7BQ,aAAcC,EAAeT,EAAfS,IAAKC,EAAUV,EAAVU,MAErDC,EAAc,CAChBJ,gBAAgB,GAAD,OAAKA,GACpBK,cAAc,GAAD,OAAKL,EAAkB,GACpCC,aAAa,GAAD,OAAKA,GACjBK,WAAW,GAAD,OAAKL,EAAe,IAG5BM,EAAaC,KAAU,GACzBf,OAAO,GADkB,qCAERO,IAAoB,GAFZ,kCAGXC,IAAiB,GAHN,uBAIjBN,GAJiB,IAU7B,OACI,wBAAIc,QALR,WACIb,GAAaD,IAIYe,IAAKX,EAAIR,UAAWgB,EAAYI,MAAOhB,EAAWS,EAAc,IAErF,iCACI,yBAAKb,UAAU,SAAf,IAAyBO,GACzB,4BAAKK,GACL,qCAAWN,GACX,2BAEI,uBAAGe,KAAMV,EAAKW,OAAO,SAASC,IAAI,uBAAlC,gBAQpB,SAASC,EAAT,GAAwC,IAAZC,EAAW,EAAXA,QACxB,OAAuB,IAAnBA,EAAQC,OACD,yBAAK1B,UAAU,iBAAgB,kBAAC,EAAD,OAItC,yBAAKA,UAAU,uBACX,4BACKyB,EAAQE,KAAI,SAAAzB,GAET,OACI,kBAACD,EAAD,CAAOkB,IAAKjB,EAAMM,GAAIN,MAAOA,SAuErDsB,EAAiBI,aAAe,CAC5BH,QAAU,CAAC,KAeAI,MA5Ef,WAAgB,IAAD,EAEmB1B,mBAAS,IAF5B,mBAEJsB,EAFI,KAEKK,EAFL,KA0CX,OAtCAC,qBAAU,WAAM,4CACZ,wCAAAC,EAAA,4DACc,qEADd,kBAG2BC,MAFb,sEADd,WAIwB,KADdC,EAHV,QAIiBC,GAJjB,sBAKY,IAAIC,MAAM,kBAAoBF,EAASG,MALnD,uBAOuBH,EAASI,OAPhC,cAOUA,EAPV,OAQUC,EAAWD,EACdX,KAAI,SAAAnB,GAAE,OACLyB,MAAM,8CAAD,OAA+CzB,EAA/C,uBAAuEgC,MAC1E,SAAAN,GAAQ,OAAIA,EAASI,aAX/B,UAcyBG,QAAQC,IAAIH,GAdrC,QAcUI,EAdV,OAeQjC,EAAe,EACfkC,EAAU,EACRC,EAAUF,EAAOG,QAAO,SAACC,EAAI7C,GAU/B,OAPgB,KADhB0C,GAAW,KAEPlC,IACAkC,EAAU,GAEd1C,EAAMQ,aAAeA,EACrBR,EAAMO,gBAAkBmC,EACxBG,EAAIC,KAAK9C,GACF6C,IACR,IACHjB,EAAWe,GA7Bf,kDA+BII,QAAQC,MAAR,MA/BJ,2DADY,uBAAC,WAAD,wBAmCZC,KACC,IAGD,yBAAKnD,UAAU,OACX,4BAAQA,UAAU,cACd,kDAIJ,8BACI,kBAACwB,EAAD,CAAkBC,QAASA,OC/G3C2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3fb97f65.chunk.js","sourcesContent":["import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => (\n    <div className=\"spinner\">\n        <div className=\"pulse-container\">\n            <div className=\"pulse-bubble pulse-bubble-1\" />\n            <div className=\"pulse-bubble pulse-bubble-2\" />\n            <div className=\"pulse-bubble pulse-bubble-3\" />\n        </div>\n    </div>\n);\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './App.css';\n\nimport Spinner from './components/Spinner';\nfunction Story({ story }) {\n    const [isExpand, setIsExpand] = useState(false);\n    const { by, score, id, gridColumnStart, gridRowStart, url, title } = story;\n\n    const styleExpand = {\n        gridColumnStart: `${gridColumnStart}`,\n        gridColumnEnd: `${gridColumnStart + 2}`,\n        gridRowStart: `${gridRowStart}`,\n        gridRowEnd: `${gridRowStart + 2}`\n    }\n\n    const classStory = classnames({\n        story: true,\n        [`column-start-${gridColumnStart}`]: true,\n        [`row-start-${gridRowStart}`]: true,\n        expand: isExpand\n    })\n    function expandCell(){\n        setIsExpand(!isExpand);\n    }\n\n    return (\n        <li onClick={expandCell} key={id} className={classStory} style={isExpand ? styleExpand : {}}>\n            \n            <article>\n                <div className=\"score\"> {score}</div>\n                <h5>{title}</h5>\n                <small>By {by}</small>\n                <p>\n                    \n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\n                </p>\n                \n            </article>\n        </li>\n    );\n}\n\nfunction HackerStoryTiles({ stories }) {\n    if (stories.length === 0) {\n        return <div className=\"loading-block\"><Spinner /></div>;\n    }\n\n    return (\n        <div className=\"story-list__wrapper\">\n            <ul>\n                {stories.map(story => {\n\n                    return (\n                        <Story key={story.id} story={story} />\n                    )\n                    \n                })}\n            </ul>\n        </div>\n    );\n}\n\n\n\nfunction App() {\n\n    const [stories, setStories] = useState([]);\n\n    useEffect(() => {\n        async function getTopStories() {\n          const url = \"https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\";\n          try {\n            const response = await fetch(url);\n            if (response.ok === false) {\n              throw new Error(\"Response Error:\" + response.text);\n            }\n            const json = await response.json();\n            const promises = json\n              .map(id =>\n                fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`).then(\n                  response => response.json()\n                )\n              );\n            const result = await Promise.all(promises);\n            let gridRowStart = 1;\n            let counter = 0;\n            const reducer = result.reduce((acc,story) => {\n                \n                counter += 1;\n                if (counter === 9) {\n                    gridRowStart++;\n                    counter = 1;\n                } \n                story.gridRowStart = gridRowStart;\n                story.gridColumnStart = counter;\n                acc.push(story)\n                return acc;\n            }, []);\n            setStories(reducer);\n          } catch (err) {\n            console.error(err);\n          }\n        }\n        getTopStories();\n      }, []);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div>\n                    Hacker News feed\n                </div>\n            </header>\n            <main>\n                <HackerStoryTiles stories={stories} />\n            </main>\n        </div>\n    );\n}\n\nHackerStoryTiles.propTypes = {\n    stories: PropTypes.arrayOf(PropTypes.shape({}))\n}\n\nHackerStoryTiles.defaultProps = {\n    stories : [{}]\n}\n\nStory.propTypes = {\n    story: PropTypes.shape({\n        by: PropTypes.string,\n        score: PropTypes.string,\n        id: PropTypes.number,\n        gridColumnStart: PropTypes.number,\n        gridRowStart: PropTypes.number,\n        url: PropTypes.string,\n        title: PropTypes.string\n    }).isRequired\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}